/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.pwa.web.struts.action;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.TreeMap;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.PairValueDesc;
import com.pwa.common.CUtil;
import com.pwa.common.DateUtil;
import com.pwa.common.Env;
import com.pwa.common.MessageList;
import com.pwa.common.Meter;
import com.pwa.data.DBHelper;
import com.pwa.interfaces.export.InterfaceDataExporter;
import com.pwa.web.ScreenMsgUtil;
import com.pwa.web.helper.ReportHelper;
import com.pwa.web.helper.WebUtil;
import com.pwa.web.struts.form.ExportDataForm;

public class ExportDataAction extends BaseAction {
	public static Logger log = Logger.getLogger(ExportDataAction.class);

	public ActionForward main(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		ExportDataForm f = (ExportDataForm) form;
		String type = WebUtil.getURIParam(request, "type");
		log.debug("enter " + type);
		session.setAttribute("type", type);

		if (CUtil.isBlank(f.getDateStr())) {
			f.setDateStr(DateUtil.formatLongThaiDate(new Date()));
		}
		ArrayList<PairValueDesc> codeIDList = WebUtil.getCodeIDList((String)session.getAttribute("br"));
		session.setAttribute("codeIDList", codeIDList);

		return mapping.findForward("main");
	}

	public ActionForward submit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response)
			throws FileNotFoundException, IOException, ServletException, ParseException {
		HttpSession session = request.getSession();
		String br = (String) session.getAttribute("br");
		ExportDataForm f = (ExportDataForm) form;
		MessageList msgList = new MessageList();
		Meter m = new Meter();
		WebUtil.setupDefaultProgressManager(session); // setup progress
		
		log.debug("enter ");
		String codeid = f.getCodeid();
		String trandateStr = f.getDateStr();
		try {
			log.debug("codeid=" + codeid + ", trandate=" + trandateStr);
			Date tranDate = DateUtil.parseThaiDate(trandateStr);
			codeid = CUtil.getNullIfEmpty(codeid);

			// validate input
			if (CUtil.isBlank(codeid)) {
				msgList.addMessage("E", "กรุณาเลือกพนักงาน");
			}
			if (CUtil.isBlank(trandateStr)) {
				msgList.addMessage("E",  "กรุณาเลือกวันที่" );
			}

			// export
			if (!msgList.isContainError()) {

				TreeMap<String, Object> c = new TreeMap<String, Object>(); // criteria
				DBHelper.putToCriIfNotNull(c, "codeid", codeid);
				DBHelper.putToCriIfNotNull(c, "trandate", tranDate);
//				DBHelper.putToCriIfNotNull(c, "readflag", "1"); // only readflag="1"
				// export DB to file
				String dateStr = DateUtil.getExportFilename(tranDate);

				String webDisplayFileName = "T"+codeid + dateStr+".TXT";
				String localAbsFileName = Env.get("meter.datadir") + "/export/" + webDisplayFileName;

				//InterfaceDataExporter.run(localAbsFileName, c);
				ArrayList exportDataViewList = getExportDataViewList(c,br);
				session.setAttribute("webDisplayFileName", webDisplayFileName);
				session.setAttribute("localAbsFileName", localAbsFileName);
				session.setAttribute("exportDataViewList", exportDataViewList);
				// make download
				// request.getRequestDispatcher("./fileDownload.do").forward(request, response);
				// log.debug("download finish");

			}
		} catch (Exception e) {
			msgList.addMessage(e);
			e.printStackTrace();
		}finally{
			log.debug(m.took());
			WebUtil.removeProgressManager(session);
		}
		ActionForward forward = null;
		if (!msgList.isContainError()) {
			//request.setAttribute("success", "1"); // success flag
			forward = mapping.findForward("success");
			// forward = null;
		} else {
			forward = mapping.findForward("main");
		}
		saveMessages(request, ScreenMsgUtil.getMsgsToScreen(msgList));
		return forward;
	}
	protected ArrayList getExportDataViewList(TreeMap c,String br) throws Exception {
		ArrayList r = new ArrayList();
		String sql = "";
		sql += "SELECT * ";
		sql += "FROM export ";
		sql += "WHERE BR = '"+br+"' ";
		sql += DBHelper.getAndIfCond(DBHelper.getConStr(c, false));
		sql += " ORDER BY filename ";
		ReportHelper.getExportDataViewList(sql, c, r);

		return r;
	}

}