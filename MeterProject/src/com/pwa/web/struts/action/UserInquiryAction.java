/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.pwa.web.struts.action;

import java.util.ArrayList;
import java.util.TreeMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.PairValueDesc;
import com.pwa.common.CUtil;
import com.pwa.common.MessageList;
import com.pwa.common.exception.CMException;
import com.pwa.data.DBHelper;
import com.pwa.web.ScreenMsgUtil;
import com.pwa.web.helper.InvoiceHelper;
import com.pwa.web.helper.WebUtil;
import com.pwa.web.struts.form.UserInquiryForm;
import com.pwa.web.view.InvoiceView;

public class UserInquiryAction extends DispatchAction {
	Logger log = Logger.getLogger(UserInquiryAction.class);

	public ActionForward main(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
		log.debug("enter ");
		HttpSession session = request.getSession();
		// lookup List
        ArrayList<PairValueDesc> monthList = WebUtil.getMonthList();
        session.setAttribute("monthList", monthList);
        ArrayList<PairValueDesc> yearList = WebUtil.getYearList();
        session.setAttribute("yearList", yearList);
		return mapping.findForward("main");
	}

	public ActionForward submit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		String br = (String)session.getAttribute("br");
		UserInquiryForm f = (UserInquiryForm) form;
		log.debug("enter ");
		MessageList msgList = new MessageList();

		String custcode = f.getCustcode();
		String month = f.getMonth();
		String year = f.getYear();
		try {

			if (CUtil.isBlank(custcode)) { // validate
				throw new CMException("E",  "กรุณากรอกชื่อผูใช้" );
			}
			if (CUtil.isBlank(month)) { // validate
                throw new CMException("E",  "กรุณากรอกเดือน" );
            }
			if (CUtil.isBlank(year)) { // validate
                throw new CMException("E",  "กรุณากรอกปี" );
            }

			TreeMap c = new TreeMap();
			custcode = CUtil.getNullIfEmpty(custcode);
			month = CUtil.getNullIfEmpty(month);
			year = CUtil.getNullIfEmpty(year);
			year = year.substring(2, 4);
			DBHelper.putToCriIfNotNull(c, "custcode", custcode);
			DBHelper.putToCriIfNotNull(c, "PRSMTRRDDTM", month);
			DBHelper.putToCriIfNotNull(c, "PRSMTRRDDTY", year);
					
			// get InvoiceView
			InvoiceView view = InvoiceHelper.getInvoiceView(c,br);
			if(view ==null){
				throw new CMException("E","ไม่พบข้อมูลผู้ใช้น้ำ" );
			}
			session.setAttribute("view", view);
			
		} catch (Exception e) {
			e.printStackTrace();
			msgList.addMessage(e);
		}

		ActionForward forward = null;
		if (!msgList.isContainError()) {
			forward = mapping.findForward("success");
		} else {
			forward = mapping.findForward("main");
		}

		saveMessages(request, ScreenMsgUtil.getMsgsToScreen(msgList));

		return forward;
	}

}